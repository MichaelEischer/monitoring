#!/usr/bin/perl
#
# Copyright (c) 2007, Eric F Crist
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or 
# without modification, are permitted provided that the following 
# conditions are met:
#
# Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in 
# the documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# $Id: check_bmc_dell_raid 319 2011-02-26 04:41:00Z ecrist $
# $HeadURL: https://www.secure-computing.net/svn/trunk/nagios/check_bmc_dell_raid $

use strict;
use warnings;

use POSIX ();

my ($sysname, $nodename, $release, $version, $machine);
($sysname, $nodename, $release, $version, $machine) = POSIX::uname();

if ($sysname eq "FreeBSD") {
	use lib "/usr/local/libexec/nagios";
} else {
	use lib "/usr/local/nagios/libexec";
}

use utils qw(%ERRORS);

my $usage = "
Usage: $0 host_addr ipmi_user ipmi_pass

Connects to a Dell BMC and parses the Drive token for RAID status
and disk slot errors.";

# Gets output of ipmi command, this is funny with IPMI v2, we *sometimes* get an Authentication type error.
my $result = `/usr/local/bin/ipmitool -I lan -H $ARGV[0] -U $ARGV[1] -P $ARGV[2] sdr type "Drive Slot / Bay" | grep -v "Authentication"`;

# Check for authentication type error, and ignore it if it's there.

my @status = split(/\|\s/s,$result);

chomp $status[4];

# XXX Debug lines XXX
#print "Raw Status: $result\n";
#print "My Status = \"$status[4]\"\n";

if ($status[4] =~ m/^Drive Present\Z/g){
	print "Raid Optimal | raid=10\n";
	exit $ERRORS{'OK'};
}
elsif ($status[4] =~ m/^Drive Present, Parity Check In Progress$/g) {
	print "Raid Reconstructing | raid=5\n";
	exit $ERRORS{'WARNING'};
}
else {
	print "Drive Present, In Critical Array | raid = 0\n";
	exit $ERRORS{'CRITICAL'};
}
